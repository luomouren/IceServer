#registry config for icegrid 
#实例名称，不能重复
IceGrid.InstanceName=IceGrid

#定位主服务的地址，必须配置
Ice.Default.Locator=IceGrid/Locator:ssl -h 192.168.5.1 -p 4061:tcp -h 192.168.5.1 -p 4061

# 指定主注册服务的名称
Ice.ProgramName=Slave_1
# 指定主注册鼓舞的跟踪节点信息的级别(0~3),默认为0
IceGrid.Registry.Trace.Node=3
# 指定主/从热备注册服务的跟踪级别(0~3)，默认为0
IceGrid.Registry.Trace.Replica=3

# 定义节点是否和注册服务并置在一起，1为并置，0为不并置
IceGrid.Node.CollocateRegistry=1

# 激活器跟踪级别，通常为0/1/2/3级，默认是0
IceGrid.Node.Trace.Activator=1
# 对象适配器跟踪级别，通常为0/1/2/3级，默认是0
# IceGrid.Node.Trace.Adapter=2
# 服务跟踪级别，通常为0/1/2/3级，默认是0
# IceGrid.Node.Trace.Server=3

#客户端访问注册服务器的端点信息
IceGrid.Registry.Client.Endpoints=default -p 4061
#服务端访问注册服务器的端点信息，通常是default
IceGrid.Registry.Server.Endpoints=default
#内部访问端点信息，通常是default，节点用这个端口和注册服务通信
IceGrid.Registry.Internal.Endpoints=default

# registry 持久化文件存放目录 需要手工创建目录
# IceGrid.Registry.Data=./registrySlave
# 注册中心数据保存路径，需要手动创建文件夹
IceGrid.Registry.Data=db/registrySlave
#是否允许动态注册  生产关闭
IceGrid.Registry.DynamicRegistration=1

Ice.LogFile=G:\registrySlave.log

#标识为主服务
#IceGrid.Registry.ReplicaName=Master

#设定防火墙安全代理，从而控制客户端访问注册表时可用的权限
IceGrid.Registry.PermissionsVerifier=IceGrid/NullPermissionsVerifier
#设定防火墙代理，从而控制注册表管理者可用的权限 
IceGrid.Registry.AdminPermissionsVerifier=IceGrid/NullPermissionsVerifier
#设定SSL安全代理，从而设定客户端访问注册表时的SSL安全访问机制   
IceGrid.Registry.SSLPermissionsVerifier=IceGrid/NullSSLPermissionsVerifier
#设定SSL安全代理，从而设定注册表管理者的SSL安全访问机制 
IceGrid.Registry.AdminSSLPermissionsVerifier=IceGrid/NullSSLPermissionsVerifier  
 
#配置管理授权的帐号和密码
IceGridAdmin.Username=gyadmin
IceGridAdmin.Password=guangyuan 

# IceSSL properties
#使用的是icegridregistry.exe可执行程序，所以配置IceSSL插件使用C++配置IceSSL:createIceSSL  
Ice.Plugin.IceSSL=IceSSL:createIceSSL
#证书所在目录
IceSSL.DefaultDir=certs1
#数字证书文件-PKCS12 files
IceSSL.CertFile=server.p12
IceSSL.Keystore=server.jks
#数字证书签名的根证书
IceSSL.CAs=cacert.pem
#读取私钥时使用的密码
IceSSL.Password=password
#Log properties
IceGrid.Registry.Trace.Adapter=1

#如果允许管理客户端icegrid admin在不用证书情况下依然可以进行ssl连接到注册服务器，则需设置如下属性：
#注：IceSSL.VerifyPeer 在ssl握手过程中这个配置有3种认证方式，分别为0 是客户端和服务端都不认证。1 单向认证.2 双向认证，是ice的默认ssl配置。
IceSSL.VerifyPeer=1

# Required for a Java 1.8 client to talk to a C++ server on OSX
IceSSL.ProtocolVersionMax=tls1_1